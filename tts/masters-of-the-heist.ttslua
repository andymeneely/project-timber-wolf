-- Game save need this: require("masters-of-the-heist")
-- Then configure the TTSLua VS Code plugin to point to the timber-wolf/tts dir
require("guids")
require("scenario-builder")
require("util")
require("spawn")
require("scenarios")
require("download-game-data")
require("controls")

function onLoad()
  broadcastToAll("Welcome to Master of the Heist!!")
  assignHotkeys()
end

function toggleDrawer()
  if(UI.getAttributes('drawer').active == "true") then
    UI.hide('drawer')
    UI.hide('custom-panel')
  else
    UI.hide('control-drawer')
    UI.show('drawer')
  end
end

function toggleControls()
  if(UI.getAttributes('control-drawer').active == "true") then
    UI.hide('control-drawer')
  else
    UI.hide('drawer')
    UI.hide('custom-panel')
    UI.show('control-drawer')
  end
end

function hideAllDrawers()
  UI.hide('control-drawer')
  UI.hide('drawer')
  UI.hide('custom-panel')
end

function setSaveString(_obj, _color, save_string, stillEditing)
  if not stillEditing then
    buildScenario(save_string)
  end
end

-- From the custom drawer
function setCustomSaveString(_player, value, id)
  buildScenario(value)
end

function toggleCustom()
  if(UI.getAttributes('custom-panel').active == "true" ) then
    UI.hide('custom-panel')
  else
    UI.show('custom-panel')
  end
end

function assignHotkeys()
  addHotkey("Shuffle & Draw Security Chit", drawSecurityChit, false)
  addHotkey("Lock all hexes", lockAllHexes, false)
  addHotkey("Unlock all hexes", unlockAllHexes, false)
  addHotkey("Lock all planning tokens", lockAllPlanning, false)
  addHotkey("Unlock all planning tokens", unlockAllPlanning, false)
  addHotkey("Spawn hex tile", respawnHexes, false)
end

function drawSecurityChit(_pcolor, _hov_obj, world_position, _key_down_up)
  local bag = getObjectFromGUID(security_bag_guid)
  if #bag.getObjects() <= 0 then
    broadcastToAll("Security Bag Empty! The Lookout rejoices...")
    return
  end
  local pos = world_position
  pos.y = 3
  bag.shuffle();
  bag.takeObject({
    position = pos,
    rotation = {x=0, y = 180 , z=0},
    callback_function = function(obj) broadcastToAll(obj.getName() .. " revealed" ) end
  })
end



-- Whenever a card leaves a deck, give it the same tags as that deck
function onObjectLeaveContainer(container, leave_object)
  if container.type == "Deck" then
    leave_object.setTags(container.getTags())
  end
end