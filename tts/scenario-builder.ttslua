function buildScenario(save_string)
  local hextiles = parseTileList(save_string)
  local x_start = -14
  local z_start = 11
  local hex_width = 3.8
  local z_shift = 3.3
  local stride = math.sqrt(getn(hextiles))
  local odd_row_shift = 1.9

  for i,t in pairs(hextiles) do
    row = math.floor((i - 1) / stride)
    col = (i - 1) % stride
    if(isHex(t)) then
      hex_x = x_start + col * hex_width + (row % 2)* odd_row_shift
      hex_z = z_start - row * z_shift
      placeHex(t, hex_x, hex_z)
      placeChits(t, hex_x, hex_z)
    end
  end
end

function parseTileList(save_string)
  local title = save_string:gsub("|.*$",''):gsub("+"," ") -- not using, strip away
  local tile_list = '';
  for w in save_string:gmatch("([^|]+)") do
    tile_list = w
  end

  local hextiles = {}
  local t_i = 1
  for t in tile_list:gmatch("[^ ]+") do
    hextiles[t_i] = t
    t_i = t_i + 1
  end
  return hextiles
end

function placeHex(t, hex_x, hex_z)
  local hex_y = 10
  if(t ~= "SC") then -- normalize rotation and flip accordingly
    r = {x=0,y=90,z=180}
  else
    r = {x=0,y=90,z=0}
  end
  local tile_bag = getObjectFromGUID(tile_bag_guid)
  tile_bag.takeObject({ position={ x=hex_x, y=hex_y, z=hex_z, }, rotation=r })
end

function placeChits(t, hex_x, hex_z)
  local guard_bag = getObjectFromGUID(guard_bag_guid)
  local lock_bag = getObjectFromGUID(lock_bag_guid)
  local camera_bag = getObjectFromGUID(camera_bag_guid)
  local folder_bag = getObjectFromGUID(folder_bag_guid)
  local guard_bag = getObjectFromGUID(guard_bag_guid)
  local jewel_bag = getObjectFromGUID(jewel_bag_guid)
  local usb_bag = getObjectFromGUID(usb_bag_guid)
  local asterisk_bag = getObjectFromGUID(asterisk_bag_guid)
  local money_1k_bag = getObjectFromGUID(money_1k_bag_guid)
  local money_2k_bag = getObjectFromGUID(money_2k_bag_guid)
  local money_5k_bag = getObjectFromGUID(money_5k_bag_guid)
  local guard_dog_bag = getObjectFromGUID(guard_dog_bag_guid)
  local reinforcements_bag = getObjectFromGUID(reinforcements_bag_guid)
  local keycard_door_bag = getObjectFromGUID(keycard_door_bag_guid)
  local remote_lock_y_bag = getObjectFromGUID(remote_lock_y_bag_guid)
  local server_x_bag = getObjectFromGUID(server_x_bag_guid)
  local server_y_bag = getObjectFromGUID(server_y_bag_guid)
  local watchtower_bag = getObjectFromGUID(watchtower_bag_guid)
  local remote_lock_x_bag = getObjectFromGUID(remote_lock_x_bag_guid)

  d = 0.65 -- nudge amount for 2 chits
  if t == 'GU'     then place1Chit(guard_bag, hex_x, hex_z)
  elseif t == 'LO' then place1Chit(lock_bag, hex_x, hex_z)
  elseif t == 'CM' then place1Chit(camera_bag, hex_x, hex_z)
  elseif t == 'DO' then place1Chit(guard_dog_bag, hex_x, hex_z)
  elseif t == 'JW' then place1Chit(jewel_bag, hex_x, hex_z)
  elseif t == '$1' then place1Chit(money_1k_bag, hex_x, hex_z)
  elseif t == '$2' then place1Chit(money_2k_bag, hex_x, hex_z)
  elseif t == '$3' then place2Chits(money_1k_bag, money_2k_bag, hex_x, hex_z)
  elseif t == 'PP' then place1Chit(folder_bag, hex_x, hex_z)
  elseif t == 'USB' then place1Chit(usb_bag, hex_x, hex_z)
  elseif t == 'USB' then place1Chit(usb_bag, hex_x, hex_z)
  elseif t == '*'  then place1Chit(asterisk_bag, hex_x, hex_z)
  elseif t == 'G2' then place2Chits(guard_bag, guard_bag, hex_x, hex_z)
  elseif t == 'L2' then place2Chits(lock_bag, lock_bag, hex_x, hex_z)
  elseif t == 'C2' then place2Chits(camera_bag, camera_bag, hex_x, hex_z)
  elseif t == '2GL' then place2Chits(guard_bag, lock_bag, hex_x, hex_z)
  elseif t == '2GC' then place2Chits(guard_bag, camera_bag, hex_x, hex_z)
  elseif t == '2GD' then place2Chits(guard_bag, guard_dog_bag, hex_x, hex_z)
  elseif t == 'G1K' then place2Chits(guard_bag, money_1k_bag, hex_x, hex_z)
  elseif t == 'G2K' then place2Chits(guard_bag, money_2k_bag, hex_x, hex_z)
  elseif t == 'GDGD' then place2Chits(guard_dog_bag, guard_dog_bag, hex_x, hex_z)
  elseif t == '2CL' then place2Chits(camera_bag, lock_bag, hex_x, hex_z)
  elseif t == '2CD' then place2Chits(camera_bag, guard_dog_bag, hex_x, hex_z)
  elseif t == '2LD' then place2Chits(lock_bag, guard_dog_bag, hex_x, hex_z)
  elseif t == 'SX' then place1Chit(server_x_bag, hex_x, hex_z)
  elseif t == 'SY' then place1Chit(server_y_bag, hex_x, hex_z)
  elseif t == 'RX' then place1Chit(remote_lock_x_bag, hex_x, hex_z)
  elseif t == 'RY' then place1Chit(remote_lock_y_bag, hex_x, hex_z)
  elseif t == 'RXJ' then place2ChitsStacked(remote_lock_x_bag, jewel_bag, hex_x, hex_z)
  elseif t == 'RXD' then place2ChitsStacked(remote_lock_x_bag, folder_bag, hex_x, hex_z)
  elseif t == 'RYJ' then place2ChitsStacked(remote_lock_y_bag, jewel_bag, hex_x, hex_z)
  elseif t == 'RYD' then place2ChitsStacked(remote_lock_y_bag, folder_bag, hex_x, hex_z)
  elseif t == 'KCL' then place1Chit(keycard_door_bag, hex_x, hex_z)
  elseif t == 'MW' then place1Chit(meeple_bag, hex_x, hex_z)
  end
end

  -- "KC" : { 'slug': 'keycard',l
-- "GKC" : { 'slug': 'security-guard-keycard',
-- elseif t == 'BE'  then place1Chit(beacon_bag, hex_x, hex_z)
-- "RE" : { 'slug': 'reinforcements',
-- "WT" : { 'slug': 'watchtower',
-- "GA" : { 'slug': 'gate-a',
-- "GB" : { 'slug': 'gate-b',
-- "GC" : { 'slug': 'gate-c',
-- "GD" : { 'slug': 'gate-d',
-- "G2X" : { 'slug': 'security-guard-2x',
-- "C2X" : { 'slug': 'security-camera-2x',
-- "L2X" : { 'slug': 'security-lock-2x',
--
-- "E1" : { 'slug': 'entrance-upper-right',
-- "E2" : { 'slug': 'entrance-right',
-- "E3" : { 'slug': 'entrance-lower-right',
-- "E4" : { 'slug': 'entrance-lower-left',
-- "E5" : { 'slug': 'entrance-left',
-- "E6" : { 'slug': 'entrance-upper-left',
-- "RXM" : { 'slug': 'remote-lock-x-meeple',
-- "RYM" : { 'slug': 'remote-lock-y-meeple',



function place1Chit(bag, cx, cz)
  local chit_y = 15
  bag.takeObject({
    position = { x = cx, y = chit_y, z = cz },
    rotation = { x = 0, y = 180, z = 0 }
  })
end

function place2Chits(bag1, bag2, cx,  cz)
  local chit_y = 15
  d = 0.65 -- nudge amount for 2 chits
  bag1.takeObject({
    position = { x = cx - d, y = chit_y, z = cz - d },
    rotation = { x = 0, y = 180, z = 0 }
  })
  bag2.takeObject({
    position = { x = cx + d, y = chit_y, z = cz + d },
    rotation = { x = 0, y = 180, z = 0 }
  })
end

function place2ChitsStacked(bag1, bag2, cx,  cz)
  local chit_y = 15
  d = 0.65 -- nudge amount for 2 chits
  bag1.takeObject({
    position = { x = cx, y = chit_y - 5, z = cz },
    rotation = { x = 0, y = 180, z = 0 }
  })
  bag2.takeObject({
    position = { x = cx, y = chit_y, z = cz },
    rotation = { x = 0, y = 180, z = 0 }
  })
end

-- Not a gap and not an exit
function isHex(tile)
  return tile ~= "GP"
     and tile ~= "E1"
     and tile ~= "E2"
     and tile ~= "E3"
     and tile ~= "E4"
     and tile ~= "E5"
     and tile ~= "E6"
end
